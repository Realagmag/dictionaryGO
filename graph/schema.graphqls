type PolishWord {
  id: ID!
  text: String!
}

type EnglishWord {
  id: ID!
  text: String!
}

type Example {
  id: ID!
  text: String!
  inPolish: Boolean!
}

type Translation {
  id: ID!
  polishWord: PolishWord!
  englishWord: EnglishWord!
  examples: [Example!]!
}

input TranslationInput {
  polishWord: String!
  englishWord: String!
  examples: [ExampleInput!]
}

input ExampleInput {
  text: String!
  inPolish: Boolean!
}

input IndividualExampleInput {
  translationID: ID!
  example: ExampleInput!
}

type Query {
  polishWords: [PolishWord!]!
  englishWords: [EnglishWord!]!
  translations: [Translation!]!
  translationToEnglish(wordInPolish: String!): [Translation!]!
  translationToPolish(wordInEnglish: String!): [Translation!]!
  getPolishWord(id: ID!): PolishWord!
  getEnglishWord(id: ID!): EnglishWord!
  getExample(id: ID!): Example!
  getTranslation(id: ID!): Translation!
}

type Mutation {
  createPolishWord(word: String!): PolishWord!
  createEnglishWord(word: String!): EnglishWord!
  createTranslation(translation: TranslationInput!): Translation!
  createExample(example: IndividualExampleInput!): Example!

  deletePolishWord(id: ID!): ID!
  deleteEnglishWord(id: ID!): ID!
  deleteTranslation(id: ID!): ID!
  deleteExample(id: ID!): ID!

  updateExampleText(id: ID!, text: String!): Example!
  updatePolishWordText(id: ID!, text: String!): PolishWord!
  updateEnglishWordText(id: ID!, text: String!): EnglishWord!
}